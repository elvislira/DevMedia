- push(item) - insere um elemento

- splice(pos_inicial, qtd_elementos) - remove um valor

- pop() - remove o último elemento

- shift() - remove o primeiro elemento

- forEach(funcao) - executa uma função para cada elemento
    const quadrado = (n) => {console.log(n*n)};
    let numeros = [1, 2, 3, 4, 5];
    numeros.forEach(quadrado);

- map(funcao) - executa uma funcao em cada elemento e retorna um novo array
    const quadrado = (n) => n*n;
    let numeros = [1, 2, 3, 4, 5];
    let quadrados = numeros.map(quadrado);

- filter(funcao) - retorna outro array aplicando a condição
    const retornaPar = (n) => n%2 == 0;
    let numeros = [1, 2, 3, 4, 5];
    let quadrados = numeros.filter(retornaPar);

- reduce(funcao, valor_inicial) - redua um array a um único valor
    const somarValores = (total, valor) => total + valor;
    let numeros = [1, 2, 3, 4, 5];
    let valorTotal = numeros.reduce(somarValores, 0);

- sort() - retorna um array ordenado
    * ordenação alfabética
        let letras = ["C", "A", "F", "B", "X", "D"];
        letras.sort();
        console.log(letras);
    * ordenação numérica
        const ordenarNUmeros = (x, y) => x - y; --> <0 x,y >0 y, x
        let numeros = [10, 8, 5, 11, 9, 2, 6, 1];
        numeros.sort(ordenarNUmeros);
    * ordenação de objetos
        const ordenarObjetos = (x, y) => x.pontos - y.pontos;
        let times = [
            {equipe: 'Time Azul', pontos: 25 },
            {equipe: 'Time Verde', pontos: 47 },
            {equipe: 'Time Amarelo', pontos: 39 },
            {equipe: 'Time Vermelho', pontos: 16 },
        ];
        times.sort(ordenarObjetos);
